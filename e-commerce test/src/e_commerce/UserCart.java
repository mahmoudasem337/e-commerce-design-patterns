/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package e_commerce;

import Cart.CartManager;
import OrderStates.OrderContext;
import Product.Product;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import connection.connect;
import java.sql.*;

/**
 *
 * @author kerol_3obfacr
 */
public class UserCart extends javax.swing.JFrame {

    /**
     * Creates new form User_Cart
     */
    public UserCart(String id) {
        this.id = id;
        initComponents();
        Display_Cart();
        BookName_TextField.setEditable(false);
        BookPrice_TextField.setEditable(false);
    }

    private UserCart() {
        initComponents();
        Display_Cart();
        BookName_TextField.setEditable(false);
        BookPrice_TextField.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        Products_table = new javax.swing.JTable();
        BookQuantity_TextField = new javax.swing.JTextField();
        BookPrice_TextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BookName_TextField = new javax.swing.JTextField();
        purchase_Button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Bill_TextArea = new javax.swing.JTextArea();
        Total_Label = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Products_table.setBackground(new java.awt.Color(204, 204, 204));
        Products_table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Products_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Category", "Stock", "Price"
            }
        ));
        Products_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Products_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Products_table);

        BookQuantity_TextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        BookPrice_TextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Price");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Quantity");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Product Name");

        BookName_TextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        purchase_Button.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        purchase_Button.setText("purchase");
        purchase_Button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        purchase_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchase_ButtonActionPerformed(evt);
            }
        });

        Bill_TextArea.setBackground(new java.awt.Color(204, 204, 204));
        Bill_TextArea.setColumns(20);
        Bill_TextArea.setRows(5);
        Bill_TextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(Bill_TextArea);

        Total_Label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Total_Label.setText("Total");

        jButton7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton7.setText("Reset");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton1.setText("Products");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel10))
                            .addComponent(BookPrice_TextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(BookName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(38, 38, 38))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(purchase_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(BookQuantity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Total_Label)
                        .addGap(143, 143, 143))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookQuantity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BookPrice_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(purchase_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(Total_Label)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String Book_name, id;
    int Stock = 0, Total = 0, i = 0;

    private void Products_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Products_tableMouseClicked
        DefaultTableModel model = (DefaultTableModel) Products_table.getModel();
        int index = Products_table.getSelectedRow();

        Book_name = model.getValueAt(index, 0).toString();

        BookName_TextField.setText(model.getValueAt(index, 0).toString());
        Stock = Integer.valueOf(model.getValueAt(index, 2).toString());
        BookPrice_TextField.setText(model.getValueAt(index, 3).toString());
    }//GEN-LAST:event_Products_tableMouseClicked

    private void purchase_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchase_ButtonActionPerformed
        String quantity = BookQuantity_TextField.getText(),
                bookname = BookName_TextField.getText();

        if (quantity.isEmpty() || bookname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Missing information");
        } else if (Integer.valueOf(quantity) > Stock) {
            JOptionPane.showMessageDialog(this, "No enough products in the stock");
        } else {
            i++;
            Total += Integer.valueOf(BookQuantity_TextField.getText()) * Integer.valueOf(BookPrice_TextField.getText());
            if (i == 1) {
                Bill_TextArea.setText("---------------------------------Cart Details--------------------------------\n" + "NUM       Products       PRICE       QUANTITY       TOTAL PRICE\n" + i + Bill_TextArea.getText() + "             " + BookName_TextField.getText() + "              " + BookPrice_TextField.getText() + "               " + BookQuantity_TextField.getText() + "                      " + Total + "\n");
            } else {
                System.out.println(i);
                Bill_TextArea.setText(Bill_TextArea.getText() + i + "             " + BookName_TextField.getText() + "              " + BookPrice_TextField.getText() + "               " + BookQuantity_TextField.getText() + "                      " + Total + "\n");
            }
            Total_Label.setText("Total:" + Total);

            update_cart(BookName_TextField.getText(), Integer.valueOf(BookQuantity_TextField.getText()), Total);
            CartManager cartManager = CartManager.getInstance();
            cartManager.deleteItem(bookname);
            Display_Cart();
        }
    }//GEN-LAST:event_purchase_ButtonActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        reset();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void reset() {
        BookName_TextField.setText("");
        BookPrice_TextField.setText("");
        BookQuantity_TextField.setText("");

        Bill_TextArea.setText("");
        i = 0;
        Total = 0;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        new Products(id).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    public void Display_Cart() {
        DefaultTableModel model = (DefaultTableModel) Products_table.getModel();
        CartManager cartManager = CartManager.getInstance();
        List<Product> cartItems = cartManager.getCart();

        model.setRowCount(0);
        for (Product item : cartItems) {
            String c1 = item.getName(); // Assuming getName() returns the book name
            String c2 = item.getCategory(); // Assuming getAuthor() returns the book author
            String c3 = item.getQuantity(); // Assuming getCategory() returns the book category
            String c4 = item.getPrice(); // Assuming getQuantity() returns the book quantity

            model.addRow(new String[]{c1, c2, c3, c4});
        }
    }

    private void update_cart(String name, int quantity, int total) {
        try {
            Connection conn = null;
            // Calculate the updated stock
            Stock -= quantity;

            // Get connection from the connect class
            conn = connect.getConnection();
            String query;

            if (Stock == 0) {
                query = "DELETE FROM products WHERE product_name = ?;";
            } else {
                query = "UPDATE products SET product_quantity = ? WHERE product_name = ?;";
            }

            // Use PreparedStatement to prevent SQL injection
            try ( PreparedStatement pstmt = conn.prepareStatement(query)) {
                if (Stock == 0) {
                    pstmt.setString(1, name);
                } else {
                    pstmt.setInt(1, Stock);
                    pstmt.setString(2, name);
                }

                pstmt.executeUpdate();
            }
            OrderContext order1 = new OrderContext(id, name, String.valueOf(quantity), String.valueOf(total), "Pending");
            order(order1);
            JOptionPane.showMessageDialog(this, "sucsess !!");

            // Refresh the cart display
            Display_Cart();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    public void order(OrderContext o) {
        Connection conn = connect.getConnection();
        String query = "INSERT INTO orders (user_name, product_name, quantity, price, status) VALUES ('" + o.getUserName() + "', '" + o.getProductName() + "', '" + o.getQuantity() + "', '" + o.getPrice() + "', '" + o.getStatus() + "')";
        try {
            conn.createStatement().executeUpdate(query);
            System.out.println("Order Made");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserCart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Bill_TextArea;
    private javax.swing.JTextField BookName_TextField;
    private javax.swing.JTextField BookPrice_TextField;
    private javax.swing.JTextField BookQuantity_TextField;
    private javax.swing.JTable Products_table;
    private javax.swing.JLabel Total_Label;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton purchase_Button;
    // End of variables declaration//GEN-END:variables
}
