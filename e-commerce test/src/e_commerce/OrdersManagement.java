/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package e_commerce;

import Notification.OrderManager;
import Notification.UserNotification;
import OrderStates.OrderContext;
import connection.connect;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kerol_3obfacr
 */
public class OrdersManagement extends javax.swing.JFrame {

    /**
     * Creates new form Management
     */
    public OrdersManagement() {
        initComponents();
        Display_Products();
    }
    String order_id, user, product;
    OrderContext order;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProductName_TextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ProductPrice_TextField = new javax.swing.JTextField();
        ProductQuantity_TextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        BEdit_Button = new javax.swing.JButton();
        BDelete_Button = new javax.swing.JButton();
        BReset_Button = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Book_Table = new javax.swing.JTable();
        Status_TextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Product Name");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Total Price");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Quantity");

        BEdit_Button.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        BEdit_Button.setText("Edit");
        BEdit_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEdit_ButtonActionPerformed(evt);
            }
        });

        BDelete_Button.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        BDelete_Button.setText("Delete");
        BDelete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDelete_ButtonActionPerformed(evt);
            }
        });

        BReset_Button.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        BReset_Button.setText("Reset");
        BReset_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BReset_ButtonActionPerformed(evt);
            }
        });

        Book_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Orders ID", "User Name", "Product", "Quantity", "Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Book_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Book_TableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Book_Table);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Status");

        jButton1.setText("Update Status");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Products Management");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BEdit_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(ProductName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BDelete_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addComponent(BReset_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ProductQuantity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(133, 133, 133))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(154, 154, 154)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ProductPrice_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(22, 22, 22)))
                                .addGap(100, 100, 100)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Status_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(121, 121, 121))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jButton2)
                        .addGap(0, 527, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(84, 84, 84))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ProductName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Status_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ProductPrice_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ProductQuantity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BEdit_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BDelete_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BReset_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void Products_Reset() {
        ProductName_TextField.setText("");
        ProductPrice_TextField.setText("");
        ProductQuantity_TextField.setText("");
        Status_TextField.setText("");
    }

    public void Display_Products() {
        Connection conn = null;
        ResultSet rs = null;
        try {
            conn = connect.getConnection();
            String query = "SELECT * FROM orders";

            try ( Statement stmt = conn.createStatement()) {
                rs = stmt.executeQuery(query);

                // Get the table model and clear existing rows
                DefaultTableModel model = (DefaultTableModel) Book_Table.getModel();
                model.setRowCount(0);

                // Populate the table with data from the ResultSet
                while (rs.next()) {
                    String order_id = rs.getString("id");
                    String user_id = rs.getString("user_name");
                    String product_name = rs.getString("product_name");
                    String product_quantity = rs.getString("quantity");
                    String product_price = rs.getString("price");
                    String status = rs.getString("status");

                    model.addRow(new String[]{order_id, user_id, product_name, product_quantity, product_price, status});
                }
            }
        } catch (SQLException e) {
            System.out.println("Error while displaying books: " + e.getMessage());
        }
    }


    private void BEdit_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEdit_ButtonActionPerformed
        String name = ProductName_TextField.getText();
        String quantityStr = ProductQuantity_TextField.getText();
        String priceStr = ProductPrice_TextField.getText();
        String status = Status_TextField.getText();

        if (name.isEmpty() || status.isEmpty() || quantityStr.isEmpty() || priceStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields must be filled.", "Missing Data", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int quantity = Integer.parseInt(quantityStr);
            double price = Double.parseDouble(priceStr);

            if (quantity <= 0 || price <= 0) {
                JOptionPane.showMessageDialog(this, "Quantity and price must be positive values.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
                return;
            }

            Connection conn = null;
            try {
                conn = connect.getConnection(); // Use the reusable connection
                String query = "UPDATE orders SET product_name = ?, quantity = ?, price = ?, status = ? WHERE id = ?";

                try ( PreparedStatement pstmt = conn.prepareStatement(query)) {
                    pstmt.setString(1, name);
                    pstmt.setInt(2, quantity);
                    pstmt.setDouble(3, price);
                    pstmt.setString(4, status);
                    pstmt.setString(5, order_id);

                    int rowsAffected = pstmt.executeUpdate();
                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(this, "Product updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "No Product found with the specified name.", "Update Failed", JOptionPane.WARNING_MESSAGE);
                    }
                }

                // Reset form and refresh products display
                Products_Reset();
                Display_Products();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Quantity and price must be numeric.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_BEdit_ButtonActionPerformed

    private void BDelete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDelete_ButtonActionPerformed

        if (order_id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "You must a cell");
        } else {
            Connection conn = null;
            try {
                conn = connect.getConnection();
                String query = "DELETE FROM orders WHERE id = ?";
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setString(1, order_id);
                int rowsAffected = pstmt.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Product Deleted");
                } else {
                    JOptionPane.showMessageDialog(this, "Product not found");
                }

                Display_Products();
                Products_Reset();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "An error occurred while deleting the product");
            }
        }
    }//GEN-LAST:event_BDelete_ButtonActionPerformed

    private void BReset_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BReset_ButtonActionPerformed
        Products_Reset();
    }//GEN-LAST:event_BReset_ButtonActionPerformed

    private void Book_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Book_TableMouseClicked
        DefaultTableModel model = (DefaultTableModel) Book_Table.getModel();
        int index = Book_Table.getSelectedRow();
        product = model.getValueAt(index, 2).toString();

        order_id = model.getValueAt(index, 0).toString();
        user = model.getValueAt(index, 1).toString();
        ProductName_TextField.setText(model.getValueAt(index, 2).toString());
        ProductQuantity_TextField.setText(model.getValueAt(index, 3).toString());
        ProductPrice_TextField.setText(model.getValueAt(index, 4).toString());
        Status_TextField.setText(model.getValueAt(index, 5).toString());

        order = new OrderContext(Integer.parseInt(order_id), user, product, model.getValueAt(index, 3).toString(), model.getValueAt(index, 4).toString(), model.getValueAt(index, 5).toString());
    }//GEN-LAST:event_Book_TableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Connection conn = null;
        order.nextStep();
        order.getStatus();

        try {
            conn = connect.getConnection(); // Use the reusable connection
            String query = "UPDATE orders SET  status = ? WHERE id = ?";

            try ( PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, order.getStatus());
                pstmt.setString(2, order_id);

                int rowsAffected = pstmt.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Product updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "No Product found with the specified name.", "Update Failed", JOptionPane.WARNING_MESSAGE);
                }
            }
            
            notify_user(user, product, order.getStatus());
            Products_Reset();
            Display_Products();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new ProductsManagement().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    public void notify_user(String user, String product, String status) {
        OrderManager orderManager = new OrderManager();
        UserNotification johnNotification = new UserNotification(user);
        orderManager.attach(johnNotification);
        orderManager.updateOrderStatus(user, product, status);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrdersManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrdersManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrdersManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrdersManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrdersManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BDelete_Button;
    private javax.swing.JButton BEdit_Button;
    private javax.swing.JButton BReset_Button;
    private javax.swing.JTable Book_Table;
    private javax.swing.JTextField ProductName_TextField;
    private javax.swing.JTextField ProductPrice_TextField;
    private javax.swing.JTextField ProductQuantity_TextField;
    private javax.swing.JTextField Status_TextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
